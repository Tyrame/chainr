apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chainr-redis.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "chainr-redis.name" . }}
    helm.sh/chart: {{ include "chainr-redis.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: {{ include "chainr-redis.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chainr-redis.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chainr-redis.name" . }}
        helm.sh/chart: {{ include "chainr-redis.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      containers:
      - name: {{ include "chainr-redis.fullname" . }}
        command: ["redis-server", "/etc/redis/redis.conf"]
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: data
          mountPath: /data
        - name: conf
          mountPath: /etc/redis
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "/usr/local/bin/redis-cli -h $(hostname) ping"
      volumes:
      - name: conf
        configMap:
          name: {{ include "chainr-redis.fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.storage }}
